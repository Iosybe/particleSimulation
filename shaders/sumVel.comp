#version 430 core

layout (local_size_x = 128, local_size_y = 1, local_size_z = 1) in;

struct Particle {
    vec2 pos;
    vec2 vel;
    float mass;
};

layout(std430, binding = 1) buffer particlesBuffer {
    int nopM1;
    int nopX128M1;
    Particle particles[];
};

layout(std430, binding = 2) buffer velocityBuffer {
    vec2 velBuffer[];
};

void main() {
    vec2 velSum = vec2(0.0, 0.0);

    uint startIndex = gl_GlobalInvocationID.x * nopX128M1;
    uint endIndex = startIndex + nopM1;

    for (uint i = startIndex; i < endIndex; i++) {
        velSum += velBuffer[i];
    }

    particles[gl_GlobalInvocationID.x].vel += velSum;
    particles[gl_GlobalInvocationID.x].pos += particles[gl_GlobalInvocationID.x].vel;
}